AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  AWS SAM Template for a Telegram Bot using the multi-agent system

Globals:
  Function:
    Timeout: 30
    Runtime: python3.9
    MemorySize: 256

    Tracing: Active
    LoggingConfig:
      LogFormat: JSON
  Api:
    TracingEnabled: true
Resources:
  YourBotFunction: #set this to whatever function name you'd like
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: lambda_function.lambda_handler
      Runtime: python3.9
      Description: "Lambda function for the Telegram Bot"
      Architectures:
      - x86_64
      Policies:
        - AWSLambdaBasicExecutionRole  # Allows logging to CloudWatch
        - Statement:
            - Effect: Allow
              Action:
                - s3:GetObject
                - s3:PutObject
              Resource: "arn:aws:s3:::your-bucket-name/*"  # Access to your S3 bucket objects
        - Statement:
            - Effect: Allow
              Action:
                - lambda:InvokeFunction  # For self-invocation
              Resource: "*"
      Environment:
        Variables:
          BUCKET_NAME: "your-bucket-name"
      Events:
        TelegramWebhook:
          Type: Api
          Properties:
            Path: /webhook
            Method: post
  AdaBotS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: "your-bucket-name"